
javascript:

import React from 'react';

function MovieCard({ movie }) {
  return (
    <div className="movie-card">
      <img src={movie.posterURL} alt={movie.title} />
      <h3>{movie.title}</h3>
      <p>{movie.description}</p>
      <p>Rating: {movie.rating}</p>
    </div>
  );
}

export default MovieCard;

import React from 'react';
import MovieCard from './MovieCard';

function MovieList({ movies }) {
  return (
    <div className="movie-list">
      {movies.map((movie) => (
        <MovieCard key={movie.id} movie={movie} />
      ))}
    </div>
  );
}

export default MovieList;

import React, { useState } from 'react';

function Filter({ onFilter }) {
  const [title, setTitle] = useState('');
  const [rating, setRating] = useState('');

  const handleTitleChange = (e) => {
    setTitle(e.target.value);
  };

  const handleRatingChange = (e) => {
    setRating(e.target.value);
  };

  const handleFilterClick = () => {
    onFilter({ title, rating });
  };

  return (
    <div className="filter">
      <input
        type="text"
        placeholder="Filter by Title"
        value={title}
        onChange={handleTitleChange}
      />
      <input
        type="number"
        placeholder="Filter by Rating"
        value={rating}
        onChange={handleRatingChange}
      />
      <button onClick={handleFilterClick}>Filter</button>
    </div>
  );
}

export default Filter;

import React, { useState } from 'react';
import MovieList from './MovieList';
import Filter from './Filter';

function App() {
  const [movies, setMovies] = useState([
    {
      id: 1,
      title: 'Movie 1',
      description: 'Description of Movie 1',
      posterURL: 'URL1',
      rating: 4.5,
    },
    // Add more initial movies as needed
  ]);

  const [filteredMovies, setFilteredMovies] = useState([...movies]);

  const addMovie = (newMovie) => {
    setMovies([...movies, { ...newMovie, id: movies.length + 1 }]);
  };

  const filterMovies = ({ title, rating }) => {
    const filtered = movies.filter(
      (movie) =>
        (!title || movie.title.toLowerCase().includes(title.toLowerCase())) &&
        (!rating || movie.rating >= parseFloat(rating))
    );
    setFilteredMovies(filtered);
  };

  return (
    <div className="app">
      <h1>Movie App</h1>
      <Filter onFilter={filterMovies} />
      <MovieList movies={filteredMovies} />
      {/* Add a component for adding new movies */}
    </div>
  );
}

export default App;







